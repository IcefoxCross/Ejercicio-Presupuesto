[{"E:\\JS\\ejercicio-presupuesto\\client\\src\\index.js":"1","E:\\JS\\ejercicio-presupuesto\\client\\src\\App.js":"2","E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\auth.service.js":"3","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Home.js":"4","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Login.js":"5","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\User.js":"6","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Register.js":"7","E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\user.service.js":"8","E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\auth-header.js":"9","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Balance.js":"10","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Transaction.js":"11","E:\\JS\\ejercicio-presupuesto\\client\\src\\utils\\format.js":"12","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\TransactionList.js":"13","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\AddTransaction.js":"14","E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\expense.service.js":"15","E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\EditTransaction.js":"16"},{"size":242,"mtime":1611155388408,"results":"17","hashOfConfig":"18"},{"size":2350,"mtime":1611724962895,"results":"19","hashOfConfig":"18"},{"size":853,"mtime":1611249502450,"results":"20","hashOfConfig":"18"},{"size":1946,"mtime":1611782603831,"results":"21","hashOfConfig":"18"},{"size":3898,"mtime":1611249666573,"results":"22","hashOfConfig":"18"},{"size":748,"mtime":1611155148187,"results":"23","hashOfConfig":"18"},{"size":5009,"mtime":1611155291235,"results":"24","hashOfConfig":"18"},{"size":427,"mtime":1611154983990,"results":"25","hashOfConfig":"18"},{"size":235,"mtime":1611154641454,"results":"26","hashOfConfig":"18"},{"size":1002,"mtime":1611727732820,"results":"27","hashOfConfig":"18"},{"size":925,"mtime":1611728238093,"results":"28","hashOfConfig":"18"},{"size":104,"mtime":1611250686124,"results":"29","hashOfConfig":"18"},{"size":712,"mtime":1611727759450,"results":"30","hashOfConfig":"18"},{"size":5112,"mtime":1611723074777,"results":"31","hashOfConfig":"18"},{"size":771,"mtime":1611727584241,"results":"32","hashOfConfig":"18"},{"size":5033,"mtime":1611726894510,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1v28hg2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},"E:\\JS\\ejercicio-presupuesto\\client\\src\\index.js",[],["69","70"],"E:\\JS\\ejercicio-presupuesto\\client\\src\\App.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\auth.service.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Home.js",["71"],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Login.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\User.js",[],["72","73"],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Register.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\user.service.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\auth-header.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Balance.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\Transaction.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\utils\\format.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\TransactionList.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\AddTransaction.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\services\\expense.service.js",[],"E:\\JS\\ejercicio-presupuesto\\client\\src\\components\\EditTransaction.js",["74"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport ExpenseService from '../services/expense.service';\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return(\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validConcept = (value) => {\r\n    if (value.length < 1 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The concept must be between 1 and 20 characters.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validAmount = (value) => {\r\n    if (value <= 0) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The amount must be bigger than 0.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst EditTransaction = (props) => {\r\n    const [concept, setConcept] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [date, setDate] = useState(new Date());\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const onChangeConcept = (e) => {\r\n        setConcept(e.target.value);\r\n    };\r\n\r\n    const onChangeAmount = (e) => {\r\n        setAmount(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage('');\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            ExpenseService.updateExpense(props.match.params.id, concept, amount, date).then( (response) => {\r\n                setMessage(response.data.message);\r\n                setSuccessful(true);\r\n                props.history.goBack();\r\n            }, (error) => {\r\n                const resMessage = (error.response && error.response.data && error.response.data.message)\r\n                    || error.message || error.toString();\r\n                setSuccessful(false);\r\n                setMessage(resMessage);\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        ExpenseService.getExpense(props.match.params.id)\r\n            .then( (response) => {\r\n                const expense = response.data;\r\n                setConcept(expense.concept);\r\n                setAmount(expense.amount);\r\n                setDate(new Date(expense.date));\r\n            }, (error) => {\r\n                const resMessage = (error.response && error.response.data && error.response.data.message)\r\n                    || error.message || error.toString();\r\n                setSuccessful(false);\r\n                setMessage(resMessage);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n                <Form onSubmit={handleSubmit} ref={form}>\r\n                    {!successful && (\r\n                        <div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"concept\">Concept</label>\r\n                                <Input type=\"text\" className=\"form-control\" name=\"concept\"\r\n                                    value={concept} onChange={onChangeConcept} validations={[required, validConcept]} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"amount\">Amount</label>\r\n                                <Input type=\"number\" className=\"form-control\" name=\"amount\"\r\n                                    value={amount} onChange={onChangeAmount} validations={[required, validAmount]} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"date\">Date</label>\r\n                                <DatePicker value={date} onChange={setDate} required={true} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary btn-block\">Update Transaction</button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className={successful ? 'alert alert-success' : 'alert alert-danger'}\r\n                                role=\"alert\">\r\n                                    {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditTransaction;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":38,"column":8,"nodeType":"81","endLine":38,"endColumn":10,"suggestions":"82"},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","replacedBy":"84"},{"ruleId":"79","severity":1,"message":"85","line":92,"column":8,"nodeType":"81","endLine":92,"endColumn":10,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["89"],["87"],["88"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [user]",{"range":"95","text":"96"},"Update the dependencies array to be: [props.match.params.id]",{"range":"97","text":"98"},[1477,1479],"[user]",[2950,2952],"[props.match.params.id]"]